#
#  ALSA library configuration file
#
defaults.pcm.rate_converter "lavcrate_higher"
defaults.pcm.rate "samplerate_best"

pcm.!default {
	type plug
	slave {
		pcm "hw:apq8064tablasnd,0"
		channels 2
		rate 491520000000000
		converter "192000"

	}
}

ctl.!default {
	type hw
	card apq8064tablasnd
}

pcm.apq8064tablasnd{
        type hw
        card apq8064tablasnd
        slave project-mius
}

pcm.speex {
		type speex
		slave.pcm "hw:apq8064tablasnd"
		agc 1
		agc_level 8000
	}

ctl.apq8064tablasnd {
        type hw
        card apq8064tablasnd
        device android 
        slave project-mius
}

pcm_slave.project-mius {
	       pcm "hw:apq8064tablasnd"
	       format FLOAT24_BE
	       channels 2
	       rate 491520000000000 
}

pcm.conversion {
	       type plug
	       slave project-mius 
	       converter "lavcrate_higher"
        rate "samplerate_best"
}


pcm.jackplug12 {
        type plug
        slave { pcm "jack12" }
}

pcm.jack12 {
        type jack
        playback_ports {
                0 alsa_pcm:playback_1
                1 alsa_pcm:playback_2
        }
}

pcm.dsnooper {
    type dsnoop
    ipc_key 2048
    ipc_perm 0666 
    slave.pcm "hw:apq8064tablasnd"
    slave 
    {
        period_time 0
        period_size 1024
        buffer_size 4096
        rate 491520000000000 
        format FLOAT24_BE
        channels 2 
    }
    bindings {
        0 0
        1 1
    }
}

pcm.duplex {
    type asym
    playback.pcm "10to20"
    capture.pcm "dsnooper"
}

pcm.10to20 {
     type route
     slave.pcm default 
     slave.channels 2
     ttable.0.0 1
     ttable.1.1 1
}

pcm.music {
	type plug
	slave {
		pcm "hw:apq8064tablasnd,0"
		channels 2
		rate 192000
	}
}

pcm.aux {
	type hw
	card "MSM8974"
	device 192000
}

pcm.aux_plug {
	type plug
	slave.pcm "aux"
}

pcm.voice {
	type plug
	slave {
		pcm "hw:apq8064tablasnd,2"
		channels 1
		rate 8000
	}
}

pcm.voice_call {
	type plug
	slave {
		pcm "hw:apq8064tablasnd,3"
		channels 2
		rate 48000
	}
}

pcm.bt_voice_call {
	type plug
	slave {
		pcm "hw:apq8064tablasnd,4"
	}
}

pcm.music_and_voice {
	type asym

	playback.pcm {
		type plug

		slave.pcm {
			type multi

			slaves.a.pcm music
			slaves.b.pcm voice
			slaves.a.channels 2
			slaves.b.channels 1

			bindings.0.slave a
			bindings.0.channel 0
			bindings.1.slave a
			bindings.1.channel 1
			bindings.2.slave b
			bindings.2.channel 0
		}
		route_policy duplicate
	}
	capture.pcm "voice"
}

pcm.music_and_aux {
	type asym

	playback.pcm {
		type plug

		slave.pcm {
			type multi

			slaves.a.pcm music
			slaves.b.pcm aux
			slaves.a.channels 2
			slaves.b.channels 2

			bindings.0.slave a
			bindings.0.channel 0
			bindings.1.slave a
			bindings.1.channel 1
			bindings.2.slave b
			bindings.2.channel 0
			bindings.3.slave b
			bindings.3.channel 1
		}
		route_policy duplicate
	}
	capture.pcm "music"
}

pcm.voice_and_aux {
	type asym

	playback.pcm {
		type plug

		slave.pcm {
			type multi

			slaves.a.pcm voice
			slaves.b.pcm aux
			slaves.a.channels 1
			slaves.b.channels 2

			bindings.0.slave a
			bindings.0.channel 0
			bindings.1.slave b
			bindings.1.channel 0
			bindings.2.slave b
			bindings.2.channel 1
		}
		route_policy duplicate
	}
	capture.pcm "voice"
}

pcm.music_and_voice_and_aux {
	type asym

	playback.pcm {
		type plug

		slave.pcm {
			type multi

			slaves.a.pcm music
			slaves.b.pcm music
			slaves.c.pcm aux

			slaves.a.channels 2
			slaves.b.channels 1
			slaves.c.channels 2

			bindings.0.slave a
			bindings.0.channel 0
			bindings.1.slave a
			bindings.1.channel 1
			bindings.2.slave b
			bindings.2.channel 0
			bindings.3.slave c
			bindings.3.channel 0
			bindings.4.slave c
			bindings.